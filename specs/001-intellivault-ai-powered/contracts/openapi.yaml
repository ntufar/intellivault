openapi: 3.1.0
info:
  title: IntelliVault API
  version: v1
servers:
  - url: https://api.intellivault.example.com
paths:
  /v1/documents:  # Upload and list documents
    get:
      summary: List documents
      parameters:
        - in: query
          name: tenantId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Document'
    post:
      summary: Upload a document
      parameters:
        - in: query
          name: tenantId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '202':
          description: Accepted for processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessingJob'
  /v1/search:  # Semantic search
    get:
      summary: Search across documents
      parameters:
        - in: query
          name: tenantId
          required: true
          schema:
            type: string
        - in: query
          name: q
          required: true
          schema:
            type: string
        - in: query
          name: k
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/SearchResult'
  /v1/qa:  # Q&A with citations
    post:
      summary: Ask question over tenant corpus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [tenantId, question]
              properties:
                tenantId:
                  type: string
                question:
                  type: string
                k:
                  type: integer
                  default: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  answer:
                    type: string
                  citations:
                    type: array
                    items:
                      $ref: '#/components/schemas/SearchResult'
components:
  schemas:
    Document:
      type: object
      properties:
        id: { type: string }
        filename: { type: string }
        mimeType: { type: string }
        sizeBytes: { type: integer }
        status: { type: string, enum: [uploaded, processing, ready, error] }
    ProcessingJob:
      type: object
      properties:
        id: { type: string }
        status: { type: string, enum: [pending, running, completed, failed] }
    SearchResult:
      type: object
      properties:
        documentId: { type: string }
        chunkIndex: { type: integer }
        score: { type: number }
        highlight: { type: string }


apiVersion: v1
kind: Secret
metadata:
  name: intellivault-secrets
  labels:
    app: intellivault
type: Opaque
data:
  # Azure Cosmos DB Key (base64 encoded)
  cosmos-key: "YOUR_COSMOS_DB_KEY_BASE64_ENCODED"
  
  # Azure Storage Account Key (base64 encoded)
  storage-account-key: "YOUR_STORAGE_ACCOUNT_KEY_BASE64_ENCODED"
  
  # Azure AI Search API Key (base64 encoded)
  search-api-key: "YOUR_SEARCH_API_KEY_BASE64_ENCODED"
  
  # Azure OpenAI API Key (base64 encoded)
  openai-api-key: "YOUR_OPENAI_API_KEY_BASE64_ENCODED"
  
  # JWT Secret for authentication (base64 encoded)
  jwt-secret: "YOUR_JWT_SECRET_BASE64_ENCODED"
  
  # Database connection strings (if using external databases)
  # postgres-url: "YOUR_POSTGRES_CONNECTION_STRING_BASE64_ENCODED"
  # redis-password: "YOUR_REDIS_PASSWORD_BASE64_ENCODED"

---
# Example of how to create secrets using kubectl
# kubectl create secret generic intellivault-secrets \
#   --from-literal=cosmos-key="your-cosmos-key" \
#   --from-literal=storage-account-key="your-storage-key" \
#   --from-literal=search-api-key="your-search-key" \
#   --from-literal=openai-api-key="your-openai-key" \
#   --from-literal=jwt-secret="your-jwt-secret"

---
# Example of using Azure Key Vault with CSI driver
apiVersion: v1
kind: Secret
metadata:
  name: intellivault-keyvault-secret
  labels:
    app: intellivault
type: Opaque
data:
  # These would be populated by the Azure Key Vault CSI driver
  cosmos-key: ""
  storage-account-key: ""
  search-api-key: ""
  openai-api-key: ""
  jwt-secret: ""
